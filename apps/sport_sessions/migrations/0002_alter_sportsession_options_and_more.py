# Generated by Django 5.2.4 on 2025-08-05 18:42

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sport_sessions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='sportsession',
            options={'ordering': ['date', 'start_time'], 'verbose_name': 'Session sportive', 'verbose_name_plural': 'Sessions sportives'},
        ),
        migrations.RemoveField(
            model_name='sportsession',
            name='max_participants',
        ),
        migrations.AddField(
            model_name='sportsession',
            name='is_public',
            field=models.BooleanField(default=True, help_text='Session ouverte à tous les utilisateurs.'),
        ),
        migrations.AddField(
            model_name='sportsession',
            name='max_players',
            field=models.PositiveIntegerField(default=10, help_text='Nombre total maximum de participants.', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='sportsession',
            name='max_players_per_team',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum de joueurs par équipe (optionnel, si team_mode).', null=True, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='sportsession',
            name='min_players_per_team',
            field=models.PositiveIntegerField(blank=True, help_text='Minimum de joueurs par équipe (optionnel, si team_mode).', null=True, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='sportsession',
            name='team_mode',
            field=models.BooleanField(default=False, help_text='Active les équipes pour les sports à adversité.'),
        ),
        migrations.AlterField(
            model_name='sportsession',
            name='creator',
            field=models.ForeignKey(help_text='Utilisateur ayant créé la session.', on_delete=django.db.models.deletion.CASCADE, related_name='created_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='sportsession',
            name='date',
            field=models.DateField(help_text='Date de la session.'),
        ),
        migrations.AlterField(
            model_name='sportsession',
            name='description',
            field=models.TextField(blank=True, help_text='Détails ou règles de la session.', null=True),
        ),
        migrations.AlterField(
            model_name='sportsession',
            name='location',
            field=models.CharField(help_text='Lieu où se déroulera la session.', max_length=255),
        ),
        migrations.AlterField(
            model_name='sportsession',
            name='participants',
            field=models.ManyToManyField(blank=True, help_text='Utilisateurs inscrits à la session.', related_name='joined_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='sportsession',
            name='sport',
            field=models.CharField(choices=[('football', 'Football'), ('basketball', 'Basketball'), ('running', 'Running'), ('cycling', 'Cycling'), ('tennis', 'Tennis'), ('padel', 'Padel'), ('kayak', 'Kayak'), ('other', 'Autre')], help_text='Type de sport.', max_length=50),
        ),
        migrations.AlterField(
            model_name='sportsession',
            name='start_time',
            field=models.TimeField(help_text='Heure de début de la session.'),
        ),
        migrations.AlterField(
            model_name='sportsession',
            name='title',
            field=models.CharField(help_text='Nom ou titre de la session.', max_length=100),
        ),
    ]
